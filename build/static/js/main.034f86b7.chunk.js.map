{"version":3,"sources":["reducer/reducer.js","context/context.js","components/Form.js","components/Product.js","components/ProductList.js","components/Alert.js","App.js","index.js"],"names":["reducer","state","action","type","alert","show","msg","id","Math","random","toString","slice","inp","payload","newList","list","total","reduce","acc","parseInt","amount","filter","find","value","isEditing","editingValue","editingAmount","editItemId","map","console","log","AppContext","React","createContext","initialState","localStorage","getItem","JSON","parse","AppProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","handleSubmit","inpValues","alertMessageForEmpty","removeAlert","clearAllItems","removeItem","makeItemToShowOnInput","findItem","useGlobalContext","useContext","Form","useState","setValue","setAmount","className","htmlFor","name","placeholder","onChange","e","target","min","Number","onClick","Product","style","marginRight","ProductList","Alert","timeout","setTimeout","clearTimeout","textAlign","backgroundColor","padding","marginBottom","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.034f86b7.chunk.js","sourcesContent":["const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ALERT_FOR_EMPTY_BOX\": {\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          show: true,\r\n          msg: \"Please write something\",\r\n          type: \"danger\",\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"ADD_PRODUCT\":\r\n      let id = Math.random().toString(36).slice(2);\r\n      let inp = action.payload;\r\n      inp.id = id;\r\n      let newList = [...state.list, inp];\r\n      return {\r\n        ...state,\r\n        list: newList,\r\n        alert: {\r\n          show: true,\r\n          msg: \"Item was addedd\",\r\n          type: \"green\",\r\n        },\r\n      };\r\n\r\n    case \"REMOVE_ALERT\": {\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          show: false,\r\n          msg: \"\",\r\n          type: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"CALC_TOTAL\": {\r\n      return {\r\n        ...state,\r\n        total: state.list.reduce((acc, list) => {\r\n          return acc + parseInt(list.amount);\r\n        }, 0),\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_ALL\": {\r\n      return {\r\n        ...state,\r\n        list: [],\r\n        alert: {\r\n          show: true,\r\n          msg: \"All items was deleted\",\r\n          type: \"danger\",\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_ITEM\": {\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((list) => list.id !== action.payload),\r\n        alert: {\r\n          show: true,\r\n          msg: `You deleted ${\r\n            state.list.find((list) => list.id === action.payload).value\r\n          }`,\r\n          type: \"danger\",\r\n        },\r\n      };\r\n    }\r\n\r\n    case \"SHOW_EDIT_ITEMS\": {\r\n      const { value, amount, id } = action.payload;\r\n      return {\r\n        ...state,\r\n        isEditing: true,\r\n        editingValue: value,\r\n        editingAmount: amount,\r\n        editItemId: id,\r\n      };\r\n    }\r\n\r\n    case \"UPDATING_EDIT_VALUE\": {\r\n      const { value, amount, id } = action.payload;\r\n      const newList = state.list.map((list) =>\r\n        list.id === id ? { ...list, value: value, amount: amount } : list\r\n      );\r\n      console.log(newList);\r\n\r\n      return {\r\n        ...state,\r\n        list: newList,\r\n        alert: {\r\n          show: true,\r\n          msg: \"Updated\",\r\n          type: \"green\",\r\n        },\r\n        isEditing: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useContext, useReducer, useEffect } from \"react\";\r\nimport reducer from \"../reducer/reducer\";\r\nconst AppContext = React.createContext();\r\n\r\nconst initialExpenses = localStorage.getItem(\"expenses\")\r\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\r\n  : [];\r\nconst initialState = {\r\n  total: 0,\r\n  isEditing: false,\r\n  list: initialExpenses,\r\n  editingValue: \"\",\r\n  editingAmount: \"\",\r\n  editItemId: \"\",\r\n  alert: {\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  },\r\n};\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  //setItemsToLacle storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"expenses\", JSON.stringify(state.list));\r\n    dispatch({ type: \"CALC_TOTAL\" });\r\n  }, [state.list]);\r\n\r\n  const handleSubmit = (inpValues) => {\r\n    if (!state.isEditing) {\r\n      dispatch({ type: \"ADD_PRODUCT\", payload: inpValues });\r\n    } else {\r\n      dispatch({ type: \"UPDATING_EDIT_VALUE\", payload: inpValues });\r\n    }\r\n  };\r\n\r\n  const removeAlert = () => {\r\n    dispatch({ type: \"REMOVE_ALERT\" });\r\n  };\r\n\r\n  const clearAllItems = () => {\r\n    dispatch({ type: \"CLEAR_ALL\" });\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    dispatch({ type: \"REMOVE_ITEM\", payload: id });\r\n  };\r\n\r\n  const alertMessageForEmpty = () => {\r\n    dispatch({ type: \"ALERT_FOR_EMPTY_BOX\" });\r\n  };\r\n\r\n  const makeItemToShowOnInput = (id) => {\r\n    let findItem = state.list.find((list) => list.id === id);\r\n    dispatch({ type: \"SHOW_EDIT_ITEMS\", payload: findItem });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleSubmit,\r\n        alertMessageForEmpty,\r\n        removeAlert,\r\n        clearAllItems,\r\n        removeItem,\r\n        makeItemToShowOnInput,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst Form = () => {\r\n  const {\r\n    handleSubmit,\r\n    alertMessageForEmpty,\r\n    isEditing,\r\n    editingValue,\r\n    editingAmount,\r\n    editItemId,\r\n  } = useGlobalContext();\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const inpValues = {\r\n    value,\r\n    amount,\r\n    id: editItemId,\r\n  };\r\n  const sendValue = () => {\r\n    if (!value || !amount) {\r\n      alertMessageForEmpty();\r\n      return;\r\n    } else {\r\n      handleSubmit(inpValues);\r\n      setValue(\"\");\r\n      setAmount(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setValue(editingValue);\r\n      setAmount(editingAmount);\r\n    }\r\n  }, [isEditing]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-center\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"expense\">charge</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"charge\"\r\n            name=\"charge\"\r\n            placeholder=\"e.g. rent\"\r\n            value={value}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">amount</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            placeholder=\"e.g. 100\"\r\n            value={amount}\r\n            min=\"1\"\r\n            onChange={(e) => {\r\n              setAmount(Number(e.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button className=\"btn\" onClick={sendValue}>\r\n        {isEditing ? \"Edit\" : \"Submit\"}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst Product = ({ list }) => {\r\n  const { removeItem, makeItemToShowOnInput } = useGlobalContext();\r\n  return (\r\n    <div>\r\n      <p className=\"name\">{list.value}</p>\r\n      <span className=\"fiyat\">{list.amount} $</span>\r\n      <p className=\"icons\">\r\n        <FaTrash\r\n          style={{ marginRight: \"4PX\" }}\r\n          onClick={() => removeItem(list.id)}\r\n        />\r\n        <FaEdit onClick={() => makeItemToShowOnInput(list.id)} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { ListSharp } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useGlobalContext } from \"../context/context\";\r\nimport Product from \"./Product\";\r\nconst ProductList = () => {\r\n  const { list, clearAllItems } = useGlobalContext();\r\n  return (\r\n    <>\r\n      <div className=\"list\">\r\n        {list.map((list) => (\r\n          <Product list={list} key={list.id} />\r\n        ))}\r\n      </div>\r\n      <button className=\"btn\" onClick={() => clearAllItems()}>\r\n        Clear All Items\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Alert = ({ alert, removeAlert }) => {\r\n  // console.log(alert);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  });\r\n  return (\r\n    <div>\r\n      <h2\r\n        style={{\r\n          textAlign: \"center\",\r\n          backgroundColor: `${alert.type === \"green\" ? \"green\" : \"red\"}`,\r\n          padding: \"5px\",\r\n          marginBottom: \"15px\",\r\n        }}\r\n      >\r\n        {alert.msg}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useGlobalContext } from \"./context/context\";\r\nimport Form from \"./components/Form\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport Alert from \"./components/Alert\";\r\nfunction App() {\r\n  const { alert, removeAlert, list, total } = useGlobalContext();\r\n\r\n  return (\r\n    <main>\r\n      <h1>Budget Calculator</h1>\r\n      {alert.show && <Alert alert={alert} removeAlert={removeAlert} />}\r\n      <div className=\"container\">\r\n        <Form />\r\n        {list.length > 0 && <ProductList />}\r\n      </div>\r\n\r\n      {list.length > 0 ? (\r\n        <h1>\r\n          Total Spending <span className=\"btn\">{total}</span>\r\n        </h1>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport { AppProvider } from \"./context/context\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}